#!/usr/bin/env node

var options = require('yargs')
  .boolean('color').default('color', true).describe('color', 'colorizes output')
  .describe('no-color', 'prevents colorized output')
  .boolean('json').describe('json', 'provides parseable JSON output (implies --no-colors)')
  .boolean('dry-run').describe('dry-run', 'prevents changes to package.json')
  .alias('dry-run', 'n')
  .boolean('ignore-stars').describe('ignore-stars', 'ignore updates to packages that are set to "*"')
  .boolean('ignore-pegged').describe('ignore-pegged', 'ignore updates to packages that are pegged to a single version, rather than a range')
  .boolean('check').describe('check', 'implies --dry-run and returns with an exit code matching the number of updated dependencies')
  .help('help').alias('help', 'h')
  .version(require('../package').version).alias('version', 'v')
  .strict()
  .wrap(null)
  .argv;

if (options.check) { options['dry-run'] = true; }
if (options.json) { options['no-color'] = true; }

var salita = require('../');

salita(process.cwd(), options, function (counts) {
  counts.then(function (counts) {
    var sums = counts.reduce(function (sums, category) { return [sums[0] + category[0], sums[1] + category[1]]; }, [0, 0]);
    var total = sums[0];
    var changed = sums[1];
    if (!options.json) {
      console.error('\n' + changed + ' updated out of ' + total + ' total dependencies.');
    }
    if (options.check) { process.exit(changed); }
  });
});
